
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSERGREATERLESSER_EQUALSGREATER_EQUALSNOT_EQUALSEQUALSrightASSIGNADD_ASSIGNSUBSTRACT_ASSIGNMULTIPLY_ASSIGNDIVIDE_ASSIGNleftPLUSMINUSMPLUSMMINUSleftTIMESDIVIDEMTIMESMDIVIDEnoassocZEROSONESEYEnoassocLBRACERBRACELBRACKETRBRACKETrightUMINUSnonassocTRANSPOSITIONADD_ASSIGN ASSIGN BREAK COMMA COMMENT CONTINUE DIVIDE DIVIDE_ASSIGN ELSE EQUALS EYE FLOAT FOR GREATER GREATER_EQUALS ID IF INT LBRACE LBRACKET LESSER LESSER_EQUALS LSQUARE MDIVIDE MINUS MMINUS MPLUS MTIMES MULTIPLY_ASSIGN NOT_EQUALS ONES PLUS PRINT RANGE RBRACE RBRACKET RETURN RSQUARE SEMICOLON STRING SUBSTRACT_ASSIGN THEN TIMES TRANSPOSITION WHILE ZEROSPROGRAM : EXPRESSIONEXPRESSION : INT\n                  | FLOATEXPRESSION : IDEXPRESSION : EXPRESSION PLUS EXPRESSION\n                  | EXPRESSION MINUS EXPRESSION\n                  | EXPRESSION MPLUS EXPRESSION\n                  | EXPRESSION MMINUS EXPRESSIONEXPRESSION : EXPRESSION TIMES EXPRESSION\n                  | EXPRESSION DIVIDE EXPRESSION\n                  | EXPRESSION MTIMES EXPRESSION\n                  | EXPRESSION MDIVIDE EXPRESSIONEXPRESSION : EXPRESSION ASSIGN EXPRESSION\n                  | EXPRESSION ADD_ASSIGN EXPRESSION\n                  | EXPRESSION SUBSTRACT_ASSIGN EXPRESSION\n                  | EXPRESSION MULTIPLY_ASSIGN EXPRESSION\n                  | EXPRESSION DIVIDE_ASSIGN EXPRESSION EXPRESSION : LESSER\n                   | GREATER\n                   | LESSER_EQUALS\n                   | GREATER_EQUALS\n                   | NOT_EQUALS\n                   | EQUALSEXPRESSION : MINUS EXPRESSION %prec UMINUS EXPRESSION : EXPRESSION TRANSPOSITION EXPRESSION : ZEROS EXPRESSION\n                  | ONES EXPRESSION\n                  | EYE EXPRESSIONEXPRESSION : LBRACKET EXPRESSION RBRACKET\n                  | EXPRESSION'
    
_lr_action_items = {'INT':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'FLOAT':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'ID':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'LESSER':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'GREATER':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'LESSER_EQUALS':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'GREATER_EQUALS':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NOT_EQUALS':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'EQUALS':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[6,18,-2,-3,-4,6,-18,-19,-20,-21,-22,-23,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-25,-24,18,18,18,18,-5,-6,-7,-8,-9,-10,-11,-12,18,18,18,18,18,-29,]),'ZEROS':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ONES':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'EYE':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'LBRACKET':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[0,-1,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,-26,-27,-28,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-29,]),'PLUS':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[17,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,17,17,17,17,-5,-6,-7,-8,-9,-10,-11,-12,17,17,17,17,17,-29,]),'MPLUS':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[19,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,19,19,19,19,-5,-6,-7,-8,-9,-10,-11,-12,19,19,19,19,19,-29,]),'MMINUS':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[20,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,20,20,20,20,-5,-6,-7,-8,-9,-10,-11,-12,20,20,20,20,20,-29,]),'TIMES':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[21,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,21,21,21,21,21,21,21,21,-9,-10,-11,-12,21,21,21,21,21,-29,]),'DIVIDE':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[22,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,22,22,22,22,22,22,22,22,-9,-10,-11,-12,22,22,22,22,22,-29,]),'MTIMES':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[23,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,23,23,23,23,23,23,23,23,-9,-10,-11,-12,23,23,23,23,23,-29,]),'MDIVIDE':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[24,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,24,24,24,24,24,24,24,24,-9,-10,-11,-12,24,24,24,24,24,-29,]),'ASSIGN':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[25,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,25,25,25,25,-5,-6,-7,-8,-9,-10,-11,-12,25,25,25,25,25,-29,]),'ADD_ASSIGN':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[26,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,26,26,26,26,-5,-6,-7,-8,-9,-10,-11,-12,26,26,26,26,26,-29,]),'SUBSTRACT_ASSIGN':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[27,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,27,27,27,27,-5,-6,-7,-8,-9,-10,-11,-12,27,27,27,27,27,-29,]),'MULTIPLY_ASSIGN':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[28,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,28,28,28,28,-5,-6,-7,-8,-9,-10,-11,-12,28,28,28,28,28,-29,]),'DIVIDE_ASSIGN':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[29,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,29,29,29,29,-5,-6,-7,-8,-9,-10,-11,-12,29,29,29,29,29,-29,]),'TRANSPOSITION':([2,3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[30,-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-29,]),'RBRACKET':([3,4,5,7,8,9,10,11,12,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,],[-2,-3,-4,-18,-19,-20,-21,-22,-23,-25,-24,-26,-27,-28,49,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-29,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'EXPRESSION':([0,6,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,],[2,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> EXPRESSION','PROGRAM',1,'p_program','Mparser.py',23),
  ('EXPRESSION -> INT','EXPRESSION',1,'p_expression_number','Mparser.py',28),
  ('EXPRESSION -> FLOAT','EXPRESSION',1,'p_expression_number','Mparser.py',29),
  ('EXPRESSION -> ID','EXPRESSION',1,'p_expression_id','Mparser.py',34),
  ('EXPRESSION -> EXPRESSION PLUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',45),
  ('EXPRESSION -> EXPRESSION MINUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',46),
  ('EXPRESSION -> EXPRESSION MPLUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',47),
  ('EXPRESSION -> EXPRESSION MMINUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',48),
  ('EXPRESSION -> EXPRESSION TIMES EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',60),
  ('EXPRESSION -> EXPRESSION DIVIDE EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',61),
  ('EXPRESSION -> EXPRESSION MTIMES EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',62),
  ('EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',63),
  ('EXPRESSION -> EXPRESSION ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',76),
  ('EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',77),
  ('EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',78),
  ('EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',79),
  ('EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',80),
  ('EXPRESSION -> LESSER','EXPRESSION',1,'p_expression_relational','Mparser.py',96),
  ('EXPRESSION -> GREATER','EXPRESSION',1,'p_expression_relational','Mparser.py',97),
  ('EXPRESSION -> LESSER_EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',98),
  ('EXPRESSION -> GREATER_EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',99),
  ('EXPRESSION -> NOT_EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',100),
  ('EXPRESSION -> EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',101),
  ('EXPRESSION -> MINUS EXPRESSION','EXPRESSION',2,'p_unary_negation','Mparser.py',106),
  ('EXPRESSION -> EXPRESSION TRANSPOSITION','EXPRESSION',2,'p_matrix_transpose','Mparser.py',110),
  ('EXPRESSION -> ZEROS EXPRESSION','EXPRESSION',2,'p_expression_function','Mparser.py',120),
  ('EXPRESSION -> ONES EXPRESSION','EXPRESSION',2,'p_expression_function','Mparser.py',121),
  ('EXPRESSION -> EYE EXPRESSION','EXPRESSION',2,'p_expression_function','Mparser.py',122),
  ('EXPRESSION -> LBRACKET EXPRESSION RBRACKET','EXPRESSION',3,'p_expression_brackets','Mparser.py',135),
  ('EXPRESSION -> EXPRESSION','EXPRESSION',1,'p_expression_brackets','Mparser.py',136),
]
