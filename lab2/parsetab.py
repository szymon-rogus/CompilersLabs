
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'nonassocLESSERGREATERLESSER_EQUALSGREATER_EQUALSNOT_EQUALSEQUALSrightASSIGNADD_ASSIGNSUBSTRACT_ASSIGNMULTIPLY_ASSIGNDIVIDE_ASSIGNleftPLUSMINUSleftMPLUSMMINUSleftTIMESDIVIDEleftMTIMESMDIVIDErightUMINUSnonassocTRANSPOSITIONADD_ASSIGN ASSIGN BREAK COMMA COMMENT CONTINUE DIVIDE DIVIDE_ASSIGN ELSE EQUALS EYE FLOAT FOR GREATER GREATER_EQUALS ID IF INT LBRACE LBRACKET LESSER LESSER_EQUALS LSQUARE MDIVIDE MINUS MMINUS MPLUS MTIMES MULTIPLY_ASSIGN NOT_EQUALS ONES PLUS PRINT RANGE RBRACE RBRACKET RETURN RSQUARE SEMICOLON STRING SUBSTRACT_ASSIGN THEN TIMES TRANSPOSITION WHILE ZEROSPROGRAM : EXPRESSIONEXPRESSION : LBRACKET EXPRESSION RBRACKETEXPRESSION : INT\n                  | FLOATEXPRESSION : IDEXPRESSION : EXPRESSION PLUS EXPRESSION\n                  | EXPRESSION MINUS EXPRESSION\n                  | EXPRESSION MPLUS EXPRESSION\n                  | EXPRESSION MMINUS EXPRESSIONEXPRESSION : EXPRESSION TIMES EXPRESSION\n                  | EXPRESSION DIVIDE EXPRESSION\n                  | EXPRESSION MTIMES EXPRESSION\n                  | EXPRESSION MDIVIDE EXPRESSIONEXPRESSION : EXPRESSION ASSIGN EXPRESSION\n                  | EXPRESSION ADD_ASSIGN EXPRESSION\n                  | EXPRESSION SUBSTRACT_ASSIGN EXPRESSION\n                  | EXPRESSION MULTIPLY_ASSIGN EXPRESSION\n                  | EXPRESSION DIVIDE_ASSIGN EXPRESSION EXPRESSION : LESSER\n                   | GREATER\n                   | LESSER_EQUALS\n                   | GREATER_EQUALS\n                   | NOT_EQUALS\n                   | EQUALSEXPRESSION : MINUS EXPRESSION %prec UMINUS EXPRESSION : EXPRESSION TRANSPOSITION '
    
_lr_action_items = {'LBRACKET':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'INT':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'FLOAT':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ID':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'LESSER':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'GREATER':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LESSER_EQUALS':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'GREATER_EQUALS':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NOT_EQUALS':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'EQUALS':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'MINUS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[7,15,7,-3,-4,-5,7,-19,-20,-21,-22,-23,-24,7,7,7,7,7,7,7,7,7,7,7,7,7,-26,15,-25,-6,-7,-8,-9,-10,-11,-12,-13,15,15,15,15,15,-2,]),'$end':([1,2,4,5,6,8,9,10,11,12,13,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[0,-1,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,-25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,]),'PLUS':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[14,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,14,-25,-6,-7,-8,-9,-10,-11,-12,-13,14,14,14,14,14,-2,]),'MPLUS':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[16,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,16,-25,16,16,-8,-9,-10,-11,-12,-13,16,16,16,16,16,-2,]),'MMINUS':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[17,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,17,-25,17,17,-8,-9,-10,-11,-12,-13,17,17,17,17,17,-2,]),'TIMES':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[18,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,18,-25,18,18,18,18,-10,-11,-12,-13,18,18,18,18,18,-2,]),'DIVIDE':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[19,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,19,-25,19,19,19,19,-10,-11,-12,-13,19,19,19,19,19,-2,]),'MTIMES':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[20,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,20,-25,20,20,20,20,20,20,-12,-13,20,20,20,20,20,-2,]),'MDIVIDE':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[21,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,21,-25,21,21,21,21,21,21,-12,-13,21,21,21,21,21,-2,]),'ASSIGN':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[22,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,22,-25,-6,-7,-8,-9,-10,-11,-12,-13,22,22,22,22,22,-2,]),'ADD_ASSIGN':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[23,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,23,-25,-6,-7,-8,-9,-10,-11,-12,-13,23,23,23,23,23,-2,]),'SUBSTRACT_ASSIGN':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[24,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,24,-25,-6,-7,-8,-9,-10,-11,-12,-13,24,24,24,24,24,-2,]),'MULTIPLY_ASSIGN':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[25,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,25,-25,-6,-7,-8,-9,-10,-11,-12,-13,25,25,25,25,25,-2,]),'DIVIDE_ASSIGN':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[26,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,26,-25,-6,-7,-8,-9,-10,-11,-12,-13,26,26,26,26,26,-2,]),'TRANSPOSITION':([2,4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[27,-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-2,]),'RBRACKET':([4,5,6,8,9,10,11,12,13,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,],[-3,-4,-5,-19,-20,-21,-22,-23,-24,-26,43,-25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'EXPRESSION':([0,3,7,14,15,16,17,18,19,20,21,22,23,24,25,26,],[2,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> EXPRESSION','PROGRAM',1,'p_program','Mparser.py',23),
  ('EXPRESSION -> LBRACKET EXPRESSION RBRACKET','EXPRESSION',3,'p_expression_brackets','Mparser.py',28),
  ('EXPRESSION -> INT','EXPRESSION',1,'p_expression_number','Mparser.py',33),
  ('EXPRESSION -> FLOAT','EXPRESSION',1,'p_expression_number','Mparser.py',34),
  ('EXPRESSION -> ID','EXPRESSION',1,'p_expression_id','Mparser.py',39),
  ('EXPRESSION -> EXPRESSION PLUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',50),
  ('EXPRESSION -> EXPRESSION MINUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',51),
  ('EXPRESSION -> EXPRESSION MPLUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',52),
  ('EXPRESSION -> EXPRESSION MMINUS EXPRESSION','EXPRESSION',3,'p_expression_sum','Mparser.py',53),
  ('EXPRESSION -> EXPRESSION TIMES EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',65),
  ('EXPRESSION -> EXPRESSION DIVIDE EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',66),
  ('EXPRESSION -> EXPRESSION MTIMES EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',67),
  ('EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION','EXPRESSION',3,'p_expression_mul','Mparser.py',68),
  ('EXPRESSION -> EXPRESSION ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',77),
  ('EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',78),
  ('EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',79),
  ('EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',80),
  ('EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION','EXPRESSION',3,'p_expression_assignment','Mparser.py',81),
  ('EXPRESSION -> LESSER','EXPRESSION',1,'p_expression_relational','Mparser.py',97),
  ('EXPRESSION -> GREATER','EXPRESSION',1,'p_expression_relational','Mparser.py',98),
  ('EXPRESSION -> LESSER_EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',99),
  ('EXPRESSION -> GREATER_EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',100),
  ('EXPRESSION -> NOT_EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',101),
  ('EXPRESSION -> EQUALS','EXPRESSION',1,'p_expression_relational','Mparser.py',102),
  ('EXPRESSION -> MINUS EXPRESSION','EXPRESSION',2,'p_unary_negation','Mparser.py',107),
  ('EXPRESSION -> EXPRESSION TRANSPOSITION','EXPRESSION',2,'p_matrix_transpose','Mparser.py',111),
]
