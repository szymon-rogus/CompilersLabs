Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMA
    COMMENT
    CONTINUE
    ELSE
    EQUALS
    EYE
    FOR
    GREATER
    GREATER_EQUALS
    IF
    LBRACE
    LESSER
    LESSER_EQUALS
    LSQUARE
    NOT_EQUALS
    ONES
    PRINT
    RANGE
    RBRACE
    RETURN
    RSQUARE
    SEMICOLON
    STRING
    THEN
    TRANSPOSITION
    WHILE
    ZEROS

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> EXPRESSION
Rule 2     EXPRESSION -> LBRACKET EXPRESSION RBRACKET
Rule 3     EXPRESSION -> INT
Rule 4     EXPRESSION -> FLOAT
Rule 5     EXPRESSION -> ID
Rule 6     EXPRESSION -> EXPRESSION PLUS EXPRESSION
Rule 7     EXPRESSION -> EXPRESSION MINUS EXPRESSION
Rule 8     EXPRESSION -> EXPRESSION MPLUS EXPRESSION
Rule 9     EXPRESSION -> EXPRESSION MMINUS EXPRESSION
Rule 10    EXPRESSION -> EXPRESSION TIMES EXPRESSION
Rule 11    EXPRESSION -> EXPRESSION DIVIDE EXPRESSION
Rule 12    EXPRESSION -> EXPRESSION MTIMES EXPRESSION
Rule 13    EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION
Rule 14    EXPRESSION -> EXPRESSION ASSIGN EXPRESSION
Rule 15    EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION
Rule 16    EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
Rule 17    EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION
Rule 18    EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION

Terminals, with rules where they appear

ADD_ASSIGN           : 15
ASSIGN               : 14
BREAK                : 
COMMA                : 
COMMENT              : 
CONTINUE             : 
DIVIDE               : 11
DIVIDE_ASSIGN        : 18
ELSE                 : 
EQUALS               : 
EYE                  : 
FLOAT                : 4
FOR                  : 
GREATER              : 
GREATER_EQUALS       : 
ID                   : 5
IF                   : 
INT                  : 3
LBRACE               : 
LBRACKET             : 2
LESSER               : 
LESSER_EQUALS        : 
LSQUARE              : 
MDIVIDE              : 13
MINUS                : 7
MMINUS               : 9
MPLUS                : 8
MTIMES               : 12
MULTIPLY_ASSIGN      : 17
NOT_EQUALS           : 
ONES                 : 
PLUS                 : 6
PRINT                : 
RANGE                : 
RBRACE               : 
RBRACKET             : 2
RETURN               : 
RSQUARE              : 
SEMICOLON            : 
STRING               : 
SUBSTRACT_ASSIGN     : 16
THEN                 : 
TIMES                : 10
TRANSPOSITION        : 
WHILE                : 
ZEROS                : 
error                : 

Nonterminals, with rules where they appear

EXPRESSION           : 1 2 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18
PROGRAM              : 0

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    PROGRAM                        shift and go to state 1
    EXPRESSION                     shift and go to state 2

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    $end            reduce using rule 1 (PROGRAM -> EXPRESSION .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19


state 3

    (2) EXPRESSION -> LBRACKET . EXPRESSION RBRACKET
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 20

state 4

    (3) EXPRESSION -> INT .

    PLUS            reduce using rule 3 (EXPRESSION -> INT .)
    MINUS           reduce using rule 3 (EXPRESSION -> INT .)
    MPLUS           reduce using rule 3 (EXPRESSION -> INT .)
    MMINUS          reduce using rule 3 (EXPRESSION -> INT .)
    TIMES           reduce using rule 3 (EXPRESSION -> INT .)
    DIVIDE          reduce using rule 3 (EXPRESSION -> INT .)
    MTIMES          reduce using rule 3 (EXPRESSION -> INT .)
    MDIVIDE         reduce using rule 3 (EXPRESSION -> INT .)
    ASSIGN          reduce using rule 3 (EXPRESSION -> INT .)
    ADD_ASSIGN      reduce using rule 3 (EXPRESSION -> INT .)
    SUBSTRACT_ASSIGN reduce using rule 3 (EXPRESSION -> INT .)
    MULTIPLY_ASSIGN reduce using rule 3 (EXPRESSION -> INT .)
    DIVIDE_ASSIGN   reduce using rule 3 (EXPRESSION -> INT .)
    $end            reduce using rule 3 (EXPRESSION -> INT .)
    RBRACKET        reduce using rule 3 (EXPRESSION -> INT .)


state 5

    (4) EXPRESSION -> FLOAT .

    PLUS            reduce using rule 4 (EXPRESSION -> FLOAT .)
    MINUS           reduce using rule 4 (EXPRESSION -> FLOAT .)
    MPLUS           reduce using rule 4 (EXPRESSION -> FLOAT .)
    MMINUS          reduce using rule 4 (EXPRESSION -> FLOAT .)
    TIMES           reduce using rule 4 (EXPRESSION -> FLOAT .)
    DIVIDE          reduce using rule 4 (EXPRESSION -> FLOAT .)
    MTIMES          reduce using rule 4 (EXPRESSION -> FLOAT .)
    MDIVIDE         reduce using rule 4 (EXPRESSION -> FLOAT .)
    ASSIGN          reduce using rule 4 (EXPRESSION -> FLOAT .)
    ADD_ASSIGN      reduce using rule 4 (EXPRESSION -> FLOAT .)
    SUBSTRACT_ASSIGN reduce using rule 4 (EXPRESSION -> FLOAT .)
    MULTIPLY_ASSIGN reduce using rule 4 (EXPRESSION -> FLOAT .)
    DIVIDE_ASSIGN   reduce using rule 4 (EXPRESSION -> FLOAT .)
    $end            reduce using rule 4 (EXPRESSION -> FLOAT .)
    RBRACKET        reduce using rule 4 (EXPRESSION -> FLOAT .)


state 6

    (5) EXPRESSION -> ID .

    PLUS            reduce using rule 5 (EXPRESSION -> ID .)
    MINUS           reduce using rule 5 (EXPRESSION -> ID .)
    MPLUS           reduce using rule 5 (EXPRESSION -> ID .)
    MMINUS          reduce using rule 5 (EXPRESSION -> ID .)
    TIMES           reduce using rule 5 (EXPRESSION -> ID .)
    DIVIDE          reduce using rule 5 (EXPRESSION -> ID .)
    MTIMES          reduce using rule 5 (EXPRESSION -> ID .)
    MDIVIDE         reduce using rule 5 (EXPRESSION -> ID .)
    ASSIGN          reduce using rule 5 (EXPRESSION -> ID .)
    ADD_ASSIGN      reduce using rule 5 (EXPRESSION -> ID .)
    SUBSTRACT_ASSIGN reduce using rule 5 (EXPRESSION -> ID .)
    MULTIPLY_ASSIGN reduce using rule 5 (EXPRESSION -> ID .)
    DIVIDE_ASSIGN   reduce using rule 5 (EXPRESSION -> ID .)
    $end            reduce using rule 5 (EXPRESSION -> ID .)
    RBRACKET        reduce using rule 5 (EXPRESSION -> ID .)


state 7

    (6) EXPRESSION -> EXPRESSION PLUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 21

state 8

    (7) EXPRESSION -> EXPRESSION MINUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 22

state 9

    (8) EXPRESSION -> EXPRESSION MPLUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 23

state 10

    (9) EXPRESSION -> EXPRESSION MMINUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 24

state 11

    (10) EXPRESSION -> EXPRESSION TIMES . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 25

state 12

    (11) EXPRESSION -> EXPRESSION DIVIDE . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 26

state 13

    (12) EXPRESSION -> EXPRESSION MTIMES . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 27

state 14

    (13) EXPRESSION -> EXPRESSION MDIVIDE . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 28

state 15

    (14) EXPRESSION -> EXPRESSION ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 29

state 16

    (15) EXPRESSION -> EXPRESSION ADD_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 30

state 17

    (16) EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 31

state 18

    (17) EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 32

state 19

    (18) EXPRESSION -> EXPRESSION DIVIDE_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6

    EXPRESSION                     shift and go to state 33

state 20

    (2) EXPRESSION -> LBRACKET EXPRESSION . RBRACKET
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    RBRACKET        shift and go to state 34
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19


state 21

    (6) EXPRESSION -> EXPRESSION PLUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MINUS           reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    ASSIGN          reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    $end            reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    RBRACKET        reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14

  ! MPLUS           [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! TIMES           [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 22

    (7) EXPRESSION -> EXPRESSION MINUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MINUS           reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    ASSIGN          reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    $end            reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    RBRACKET        reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14

  ! MPLUS           [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! TIMES           [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 23

    (8) EXPRESSION -> EXPRESSION MPLUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MINUS           reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MPLUS           reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MMINUS          reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    ASSIGN          reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    $end            reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    RBRACKET        reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14

  ! TIMES           [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! MPLUS           [ shift and go to state 9 ]
  ! MMINUS          [ shift and go to state 10 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 24

    (9) EXPRESSION -> EXPRESSION MMINUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MINUS           reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MPLUS           reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MMINUS          reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    ASSIGN          reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    $end            reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    RBRACKET        reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14

  ! TIMES           [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! MPLUS           [ shift and go to state 9 ]
  ! MMINUS          [ shift and go to state 10 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 25

    (10) EXPRESSION -> EXPRESSION TIMES EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MINUS           reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MPLUS           reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MMINUS          reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    TIMES           reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    DIVIDE          reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    ASSIGN          reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    ADD_ASSIGN      reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    $end            reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    RBRACKET        reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14

  ! MTIMES          [ reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! MPLUS           [ shift and go to state 9 ]
  ! MMINUS          [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 26

    (11) EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MINUS           reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MPLUS           reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MMINUS          reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    TIMES           reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    ASSIGN          reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    ADD_ASSIGN      reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    $end            reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    RBRACKET        reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14

  ! MTIMES          [ reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .) ]
  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! MPLUS           [ shift and go to state 9 ]
  ! MMINUS          [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 27

    (12) EXPRESSION -> EXPRESSION MTIMES EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MINUS           reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MPLUS           reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MMINUS          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    TIMES           reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    DIVIDE          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MTIMES          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MDIVIDE         reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    ASSIGN          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    ADD_ASSIGN      reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    $end            reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    RBRACKET        reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! MPLUS           [ shift and go to state 9 ]
  ! MMINUS          [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! MTIMES          [ shift and go to state 13 ]
  ! MDIVIDE         [ shift and go to state 14 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 28

    (13) EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    PLUS            reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MINUS           reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MPLUS           reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MMINUS          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    TIMES           reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MTIMES          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MDIVIDE         reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    ASSIGN          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    ADD_ASSIGN      reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    RBRACKET        reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)

  ! PLUS            [ shift and go to state 7 ]
  ! MINUS           [ shift and go to state 8 ]
  ! MPLUS           [ shift and go to state 9 ]
  ! MMINUS          [ shift and go to state 10 ]
  ! TIMES           [ shift and go to state 11 ]
  ! DIVIDE          [ shift and go to state 12 ]
  ! MTIMES          [ shift and go to state 13 ]
  ! MDIVIDE         [ shift and go to state 14 ]
  ! ASSIGN          [ shift and go to state 15 ]
  ! ADD_ASSIGN      [ shift and go to state 16 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 17 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 18 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 19 ]


state 29

    (14) EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19

  ! PLUS            [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]


state 30

    (15) EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    $end            reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19

  ! PLUS            [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]


state 31

    (16) EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    $end            reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19

  ! PLUS            [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]


state 32

    (17) EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    $end            reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19

  ! PLUS            [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]


state 33

    (18) EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION

    $end            reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8
    MPLUS           shift and go to state 9
    MMINUS          shift and go to state 10
    TIMES           shift and go to state 11
    DIVIDE          shift and go to state 12
    MTIMES          shift and go to state 13
    MDIVIDE         shift and go to state 14
    ASSIGN          shift and go to state 15
    ADD_ASSIGN      shift and go to state 16
    SUBSTRACT_ASSIGN shift and go to state 17
    MULTIPLY_ASSIGN shift and go to state 18
    DIVIDE_ASSIGN   shift and go to state 19

  ! PLUS            [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]


state 34

    (2) EXPRESSION -> LBRACKET EXPRESSION RBRACKET .

    PLUS            reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MINUS           reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MPLUS           reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MMINUS          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    TIMES           reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    DIVIDE          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MTIMES          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MDIVIDE         reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    ASSIGN          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    ADD_ASSIGN      reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    SUBSTRACT_ASSIGN reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MULTIPLY_ASSIGN reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    DIVIDE_ASSIGN   reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    $end            reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    RBRACKET        reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)

