Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    COMMA
    COMMENT
    CONTINUE
    ELSE
    EYE
    FOR
    IF
    LBRACE
    LSQUARE
    ONES
    PRINT
    RANGE
    RBRACE
    RETURN
    RSQUARE
    SEMICOLON
    STRING
    THEN
    WHILE
    ZEROS

Grammar

Rule 0     S' -> PROGRAM
Rule 1     PROGRAM -> EXPRESSION
Rule 2     EXPRESSION -> LBRACKET EXPRESSION RBRACKET
Rule 3     EXPRESSION -> INT
Rule 4     EXPRESSION -> FLOAT
Rule 5     EXPRESSION -> ID
Rule 6     EXPRESSION -> EXPRESSION PLUS EXPRESSION
Rule 7     EXPRESSION -> EXPRESSION MINUS EXPRESSION
Rule 8     EXPRESSION -> EXPRESSION MPLUS EXPRESSION
Rule 9     EXPRESSION -> EXPRESSION MMINUS EXPRESSION
Rule 10    EXPRESSION -> EXPRESSION TIMES EXPRESSION
Rule 11    EXPRESSION -> EXPRESSION DIVIDE EXPRESSION
Rule 12    EXPRESSION -> EXPRESSION MTIMES EXPRESSION
Rule 13    EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION
Rule 14    EXPRESSION -> EXPRESSION ASSIGN EXPRESSION
Rule 15    EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION
Rule 16    EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
Rule 17    EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION
Rule 18    EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION
Rule 19    EXPRESSION -> LESSER
Rule 20    EXPRESSION -> GREATER
Rule 21    EXPRESSION -> LESSER_EQUALS
Rule 22    EXPRESSION -> GREATER_EQUALS
Rule 23    EXPRESSION -> NOT_EQUALS
Rule 24    EXPRESSION -> EQUALS
Rule 25    EXPRESSION -> MINUS EXPRESSION
Rule 26    EXPRESSION -> EXPRESSION TRANSPOSITION

Terminals, with rules where they appear

ADD_ASSIGN           : 15
ASSIGN               : 14
BREAK                : 
COMMA                : 
COMMENT              : 
CONTINUE             : 
DIVIDE               : 11
DIVIDE_ASSIGN        : 18
ELSE                 : 
EQUALS               : 24
EYE                  : 
FLOAT                : 4
FOR                  : 
GREATER              : 20
GREATER_EQUALS       : 22
ID                   : 5
IF                   : 
INT                  : 3
LBRACE               : 
LBRACKET             : 2
LESSER               : 19
LESSER_EQUALS        : 21
LSQUARE              : 
MDIVIDE              : 13
MINUS                : 7 25
MMINUS               : 9
MPLUS                : 8
MTIMES               : 12
MULTIPLY_ASSIGN      : 17
NOT_EQUALS           : 23
ONES                 : 
PLUS                 : 6
PRINT                : 
RANGE                : 
RBRACE               : 
RBRACKET             : 2
RETURN               : 
RSQUARE              : 
SEMICOLON            : 
STRING               : 
SUBSTRACT_ASSIGN     : 16
THEN                 : 
TIMES                : 10
TRANSPOSITION        : 26
WHILE                : 
ZEROS                : 
error                : 

Nonterminals, with rules where they appear

EXPRESSION           : 1 2 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 25 26
PROGRAM              : 0

Parsing method: LALR

state 0

    (0) S' -> . PROGRAM
    (1) PROGRAM -> . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    PROGRAM                        shift and go to state 1
    EXPRESSION                     shift and go to state 2

state 1

    (0) S' -> PROGRAM .



state 2

    (1) PROGRAM -> EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    $end            reduce using rule 1 (PROGRAM -> EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27


state 3

    (2) EXPRESSION -> LBRACKET . EXPRESSION RBRACKET
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 28

state 4

    (3) EXPRESSION -> INT .

    PLUS            reduce using rule 3 (EXPRESSION -> INT .)
    MINUS           reduce using rule 3 (EXPRESSION -> INT .)
    MPLUS           reduce using rule 3 (EXPRESSION -> INT .)
    MMINUS          reduce using rule 3 (EXPRESSION -> INT .)
    TIMES           reduce using rule 3 (EXPRESSION -> INT .)
    DIVIDE          reduce using rule 3 (EXPRESSION -> INT .)
    MTIMES          reduce using rule 3 (EXPRESSION -> INT .)
    MDIVIDE         reduce using rule 3 (EXPRESSION -> INT .)
    ASSIGN          reduce using rule 3 (EXPRESSION -> INT .)
    ADD_ASSIGN      reduce using rule 3 (EXPRESSION -> INT .)
    SUBSTRACT_ASSIGN reduce using rule 3 (EXPRESSION -> INT .)
    MULTIPLY_ASSIGN reduce using rule 3 (EXPRESSION -> INT .)
    DIVIDE_ASSIGN   reduce using rule 3 (EXPRESSION -> INT .)
    TRANSPOSITION   reduce using rule 3 (EXPRESSION -> INT .)
    $end            reduce using rule 3 (EXPRESSION -> INT .)
    RBRACKET        reduce using rule 3 (EXPRESSION -> INT .)


state 5

    (4) EXPRESSION -> FLOAT .

    PLUS            reduce using rule 4 (EXPRESSION -> FLOAT .)
    MINUS           reduce using rule 4 (EXPRESSION -> FLOAT .)
    MPLUS           reduce using rule 4 (EXPRESSION -> FLOAT .)
    MMINUS          reduce using rule 4 (EXPRESSION -> FLOAT .)
    TIMES           reduce using rule 4 (EXPRESSION -> FLOAT .)
    DIVIDE          reduce using rule 4 (EXPRESSION -> FLOAT .)
    MTIMES          reduce using rule 4 (EXPRESSION -> FLOAT .)
    MDIVIDE         reduce using rule 4 (EXPRESSION -> FLOAT .)
    ASSIGN          reduce using rule 4 (EXPRESSION -> FLOAT .)
    ADD_ASSIGN      reduce using rule 4 (EXPRESSION -> FLOAT .)
    SUBSTRACT_ASSIGN reduce using rule 4 (EXPRESSION -> FLOAT .)
    MULTIPLY_ASSIGN reduce using rule 4 (EXPRESSION -> FLOAT .)
    DIVIDE_ASSIGN   reduce using rule 4 (EXPRESSION -> FLOAT .)
    TRANSPOSITION   reduce using rule 4 (EXPRESSION -> FLOAT .)
    $end            reduce using rule 4 (EXPRESSION -> FLOAT .)
    RBRACKET        reduce using rule 4 (EXPRESSION -> FLOAT .)


state 6

    (5) EXPRESSION -> ID .

    PLUS            reduce using rule 5 (EXPRESSION -> ID .)
    MINUS           reduce using rule 5 (EXPRESSION -> ID .)
    MPLUS           reduce using rule 5 (EXPRESSION -> ID .)
    MMINUS          reduce using rule 5 (EXPRESSION -> ID .)
    TIMES           reduce using rule 5 (EXPRESSION -> ID .)
    DIVIDE          reduce using rule 5 (EXPRESSION -> ID .)
    MTIMES          reduce using rule 5 (EXPRESSION -> ID .)
    MDIVIDE         reduce using rule 5 (EXPRESSION -> ID .)
    ASSIGN          reduce using rule 5 (EXPRESSION -> ID .)
    ADD_ASSIGN      reduce using rule 5 (EXPRESSION -> ID .)
    SUBSTRACT_ASSIGN reduce using rule 5 (EXPRESSION -> ID .)
    MULTIPLY_ASSIGN reduce using rule 5 (EXPRESSION -> ID .)
    DIVIDE_ASSIGN   reduce using rule 5 (EXPRESSION -> ID .)
    TRANSPOSITION   reduce using rule 5 (EXPRESSION -> ID .)
    $end            reduce using rule 5 (EXPRESSION -> ID .)
    RBRACKET        reduce using rule 5 (EXPRESSION -> ID .)


state 7

    (25) EXPRESSION -> MINUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 29

state 8

    (19) EXPRESSION -> LESSER .

    PLUS            reduce using rule 19 (EXPRESSION -> LESSER .)
    MINUS           reduce using rule 19 (EXPRESSION -> LESSER .)
    MPLUS           reduce using rule 19 (EXPRESSION -> LESSER .)
    MMINUS          reduce using rule 19 (EXPRESSION -> LESSER .)
    TIMES           reduce using rule 19 (EXPRESSION -> LESSER .)
    DIVIDE          reduce using rule 19 (EXPRESSION -> LESSER .)
    MTIMES          reduce using rule 19 (EXPRESSION -> LESSER .)
    MDIVIDE         reduce using rule 19 (EXPRESSION -> LESSER .)
    ASSIGN          reduce using rule 19 (EXPRESSION -> LESSER .)
    ADD_ASSIGN      reduce using rule 19 (EXPRESSION -> LESSER .)
    SUBSTRACT_ASSIGN reduce using rule 19 (EXPRESSION -> LESSER .)
    MULTIPLY_ASSIGN reduce using rule 19 (EXPRESSION -> LESSER .)
    DIVIDE_ASSIGN   reduce using rule 19 (EXPRESSION -> LESSER .)
    TRANSPOSITION   reduce using rule 19 (EXPRESSION -> LESSER .)
    $end            reduce using rule 19 (EXPRESSION -> LESSER .)
    RBRACKET        reduce using rule 19 (EXPRESSION -> LESSER .)


state 9

    (20) EXPRESSION -> GREATER .

    PLUS            reduce using rule 20 (EXPRESSION -> GREATER .)
    MINUS           reduce using rule 20 (EXPRESSION -> GREATER .)
    MPLUS           reduce using rule 20 (EXPRESSION -> GREATER .)
    MMINUS          reduce using rule 20 (EXPRESSION -> GREATER .)
    TIMES           reduce using rule 20 (EXPRESSION -> GREATER .)
    DIVIDE          reduce using rule 20 (EXPRESSION -> GREATER .)
    MTIMES          reduce using rule 20 (EXPRESSION -> GREATER .)
    MDIVIDE         reduce using rule 20 (EXPRESSION -> GREATER .)
    ASSIGN          reduce using rule 20 (EXPRESSION -> GREATER .)
    ADD_ASSIGN      reduce using rule 20 (EXPRESSION -> GREATER .)
    SUBSTRACT_ASSIGN reduce using rule 20 (EXPRESSION -> GREATER .)
    MULTIPLY_ASSIGN reduce using rule 20 (EXPRESSION -> GREATER .)
    DIVIDE_ASSIGN   reduce using rule 20 (EXPRESSION -> GREATER .)
    TRANSPOSITION   reduce using rule 20 (EXPRESSION -> GREATER .)
    $end            reduce using rule 20 (EXPRESSION -> GREATER .)
    RBRACKET        reduce using rule 20 (EXPRESSION -> GREATER .)


state 10

    (21) EXPRESSION -> LESSER_EQUALS .

    PLUS            reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    MINUS           reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    MPLUS           reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    MMINUS          reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    TIMES           reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    DIVIDE          reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    MTIMES          reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    MDIVIDE         reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    ASSIGN          reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    ADD_ASSIGN      reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    SUBSTRACT_ASSIGN reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    MULTIPLY_ASSIGN reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    DIVIDE_ASSIGN   reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    TRANSPOSITION   reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    $end            reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)
    RBRACKET        reduce using rule 21 (EXPRESSION -> LESSER_EQUALS .)


state 11

    (22) EXPRESSION -> GREATER_EQUALS .

    PLUS            reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    MINUS           reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    MPLUS           reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    MMINUS          reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    TIMES           reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    DIVIDE          reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    MTIMES          reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    MDIVIDE         reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    ASSIGN          reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    ADD_ASSIGN      reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    SUBSTRACT_ASSIGN reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    MULTIPLY_ASSIGN reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    DIVIDE_ASSIGN   reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    TRANSPOSITION   reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    $end            reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)
    RBRACKET        reduce using rule 22 (EXPRESSION -> GREATER_EQUALS .)


state 12

    (23) EXPRESSION -> NOT_EQUALS .

    PLUS            reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    MINUS           reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    MPLUS           reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    MMINUS          reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    TIMES           reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    DIVIDE          reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    MTIMES          reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    MDIVIDE         reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    ASSIGN          reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    ADD_ASSIGN      reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    SUBSTRACT_ASSIGN reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    MULTIPLY_ASSIGN reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    DIVIDE_ASSIGN   reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    TRANSPOSITION   reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    $end            reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)
    RBRACKET        reduce using rule 23 (EXPRESSION -> NOT_EQUALS .)


state 13

    (24) EXPRESSION -> EQUALS .

    PLUS            reduce using rule 24 (EXPRESSION -> EQUALS .)
    MINUS           reduce using rule 24 (EXPRESSION -> EQUALS .)
    MPLUS           reduce using rule 24 (EXPRESSION -> EQUALS .)
    MMINUS          reduce using rule 24 (EXPRESSION -> EQUALS .)
    TIMES           reduce using rule 24 (EXPRESSION -> EQUALS .)
    DIVIDE          reduce using rule 24 (EXPRESSION -> EQUALS .)
    MTIMES          reduce using rule 24 (EXPRESSION -> EQUALS .)
    MDIVIDE         reduce using rule 24 (EXPRESSION -> EQUALS .)
    ASSIGN          reduce using rule 24 (EXPRESSION -> EQUALS .)
    ADD_ASSIGN      reduce using rule 24 (EXPRESSION -> EQUALS .)
    SUBSTRACT_ASSIGN reduce using rule 24 (EXPRESSION -> EQUALS .)
    MULTIPLY_ASSIGN reduce using rule 24 (EXPRESSION -> EQUALS .)
    DIVIDE_ASSIGN   reduce using rule 24 (EXPRESSION -> EQUALS .)
    TRANSPOSITION   reduce using rule 24 (EXPRESSION -> EQUALS .)
    $end            reduce using rule 24 (EXPRESSION -> EQUALS .)
    RBRACKET        reduce using rule 24 (EXPRESSION -> EQUALS .)


state 14

    (6) EXPRESSION -> EXPRESSION PLUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 30

state 15

    (7) EXPRESSION -> EXPRESSION MINUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 31

state 16

    (8) EXPRESSION -> EXPRESSION MPLUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 32

state 17

    (9) EXPRESSION -> EXPRESSION MMINUS . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 33

state 18

    (10) EXPRESSION -> EXPRESSION TIMES . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 34

state 19

    (11) EXPRESSION -> EXPRESSION DIVIDE . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 35

state 20

    (12) EXPRESSION -> EXPRESSION MTIMES . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 36

state 21

    (13) EXPRESSION -> EXPRESSION MDIVIDE . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 37

state 22

    (14) EXPRESSION -> EXPRESSION ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 38

state 23

    (15) EXPRESSION -> EXPRESSION ADD_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 39

state 24

    (16) EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 40

state 25

    (17) EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 41

state 26

    (18) EXPRESSION -> EXPRESSION DIVIDE_ASSIGN . EXPRESSION
    (2) EXPRESSION -> . LBRACKET EXPRESSION RBRACKET
    (3) EXPRESSION -> . INT
    (4) EXPRESSION -> . FLOAT
    (5) EXPRESSION -> . ID
    (6) EXPRESSION -> . EXPRESSION PLUS EXPRESSION
    (7) EXPRESSION -> . EXPRESSION MINUS EXPRESSION
    (8) EXPRESSION -> . EXPRESSION MPLUS EXPRESSION
    (9) EXPRESSION -> . EXPRESSION MMINUS EXPRESSION
    (10) EXPRESSION -> . EXPRESSION TIMES EXPRESSION
    (11) EXPRESSION -> . EXPRESSION DIVIDE EXPRESSION
    (12) EXPRESSION -> . EXPRESSION MTIMES EXPRESSION
    (13) EXPRESSION -> . EXPRESSION MDIVIDE EXPRESSION
    (14) EXPRESSION -> . EXPRESSION ASSIGN EXPRESSION
    (15) EXPRESSION -> . EXPRESSION ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> . EXPRESSION SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> . EXPRESSION MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> . EXPRESSION DIVIDE_ASSIGN EXPRESSION
    (19) EXPRESSION -> . LESSER
    (20) EXPRESSION -> . GREATER
    (21) EXPRESSION -> . LESSER_EQUALS
    (22) EXPRESSION -> . GREATER_EQUALS
    (23) EXPRESSION -> . NOT_EQUALS
    (24) EXPRESSION -> . EQUALS
    (25) EXPRESSION -> . MINUS EXPRESSION
    (26) EXPRESSION -> . EXPRESSION TRANSPOSITION

    LBRACKET        shift and go to state 3
    INT             shift and go to state 4
    FLOAT           shift and go to state 5
    ID              shift and go to state 6
    LESSER          shift and go to state 8
    GREATER         shift and go to state 9
    LESSER_EQUALS   shift and go to state 10
    GREATER_EQUALS  shift and go to state 11
    NOT_EQUALS      shift and go to state 12
    EQUALS          shift and go to state 13
    MINUS           shift and go to state 7

    EXPRESSION                     shift and go to state 42

state 27

    (26) EXPRESSION -> EXPRESSION TRANSPOSITION .

    PLUS            reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    MINUS           reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    MPLUS           reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    MMINUS          reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    TIMES           reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    DIVIDE          reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    MTIMES          reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    MDIVIDE         reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    ASSIGN          reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    ADD_ASSIGN      reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    SUBSTRACT_ASSIGN reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    MULTIPLY_ASSIGN reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    DIVIDE_ASSIGN   reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    TRANSPOSITION   reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    $end            reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)
    RBRACKET        reduce using rule 26 (EXPRESSION -> EXPRESSION TRANSPOSITION .)


state 28

    (2) EXPRESSION -> LBRACKET EXPRESSION . RBRACKET
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    RBRACKET        shift and go to state 43
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27


state 29

    (25) EXPRESSION -> MINUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    MINUS           reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    MPLUS           reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    MMINUS          reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    TIMES           reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    DIVIDE          reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    MTIMES          reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    MDIVIDE         reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    ASSIGN          reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    $end            reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    RBRACKET        reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .)
    TRANSPOSITION   shift and go to state 27

  ! TRANSPOSITION   [ reduce using rule 25 (EXPRESSION -> MINUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MTIMES          [ shift and go to state 20 ]
  ! MDIVIDE         [ shift and go to state 21 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 30

    (6) EXPRESSION -> EXPRESSION PLUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MINUS           reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    ASSIGN          reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    $end            reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    RBRACKET        reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .)
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    TRANSPOSITION   shift and go to state 27

  ! MPLUS           [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! TIMES           [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 6 (EXPRESSION -> EXPRESSION PLUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 31

    (7) EXPRESSION -> EXPRESSION MINUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MINUS           reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    ASSIGN          reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    $end            reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    RBRACKET        reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .)
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    TRANSPOSITION   shift and go to state 27

  ! MPLUS           [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! TIMES           [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 7 (EXPRESSION -> EXPRESSION MINUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 32

    (8) EXPRESSION -> EXPRESSION MPLUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MINUS           reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MPLUS           reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MMINUS          reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    ASSIGN          reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    $end            reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    RBRACKET        reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    TRANSPOSITION   shift and go to state 27

  ! TIMES           [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 8 (EXPRESSION -> EXPRESSION MPLUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 33

    (9) EXPRESSION -> EXPRESSION MMINUS EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MINUS           reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MPLUS           reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MMINUS          reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    ASSIGN          reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    ADD_ASSIGN      reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    $end            reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    RBRACKET        reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .)
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    TRANSPOSITION   shift and go to state 27

  ! TIMES           [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 9 (EXPRESSION -> EXPRESSION MMINUS EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 34

    (10) EXPRESSION -> EXPRESSION TIMES EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MINUS           reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MPLUS           reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MMINUS          reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    TIMES           reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    DIVIDE          reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    ASSIGN          reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    ADD_ASSIGN      reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    $end            reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    RBRACKET        reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .)
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    TRANSPOSITION   shift and go to state 27

  ! MTIMES          [ reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 10 (EXPRESSION -> EXPRESSION TIMES EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 35

    (11) EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MINUS           reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MPLUS           reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MMINUS          reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    TIMES           reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    ASSIGN          reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    ADD_ASSIGN      reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    $end            reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    RBRACKET        reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .)
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    TRANSPOSITION   shift and go to state 27

  ! MTIMES          [ reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 11 (EXPRESSION -> EXPRESSION DIVIDE EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 36

    (12) EXPRESSION -> EXPRESSION MTIMES EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MINUS           reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MPLUS           reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MMINUS          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    TIMES           reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    DIVIDE          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MTIMES          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MDIVIDE         reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    ASSIGN          reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    ADD_ASSIGN      reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    $end            reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    RBRACKET        reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .)
    TRANSPOSITION   shift and go to state 27

  ! TRANSPOSITION   [ reduce using rule 12 (EXPRESSION -> EXPRESSION MTIMES EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MTIMES          [ shift and go to state 20 ]
  ! MDIVIDE         [ shift and go to state 21 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 37

    (13) EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    PLUS            reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MINUS           reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MPLUS           reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MMINUS          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    TIMES           reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    DIVIDE          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MTIMES          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MDIVIDE         reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    ASSIGN          reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    ADD_ASSIGN      reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    SUBSTRACT_ASSIGN reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    MULTIPLY_ASSIGN reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    DIVIDE_ASSIGN   reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    $end            reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    RBRACKET        reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .)
    TRANSPOSITION   shift and go to state 27

  ! TRANSPOSITION   [ reduce using rule 13 (EXPRESSION -> EXPRESSION MDIVIDE EXPRESSION .) ]
  ! PLUS            [ shift and go to state 14 ]
  ! MINUS           [ shift and go to state 15 ]
  ! MPLUS           [ shift and go to state 16 ]
  ! MMINUS          [ shift and go to state 17 ]
  ! TIMES           [ shift and go to state 18 ]
  ! DIVIDE          [ shift and go to state 19 ]
  ! MTIMES          [ shift and go to state 20 ]
  ! MDIVIDE         [ shift and go to state 21 ]
  ! ASSIGN          [ shift and go to state 22 ]
  ! ADD_ASSIGN      [ shift and go to state 23 ]
  ! SUBSTRACT_ASSIGN [ shift and go to state 24 ]
  ! MULTIPLY_ASSIGN [ shift and go to state 25 ]
  ! DIVIDE_ASSIGN   [ shift and go to state 26 ]


state 38

    (14) EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    $end            reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27

  ! PLUS            [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 14 (EXPRESSION -> EXPRESSION ASSIGN EXPRESSION .) ]


state 39

    (15) EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    $end            reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27

  ! PLUS            [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 15 (EXPRESSION -> EXPRESSION ADD_ASSIGN EXPRESSION .) ]


state 40

    (16) EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    $end            reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27

  ! PLUS            [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 16 (EXPRESSION -> EXPRESSION SUBSTRACT_ASSIGN EXPRESSION .) ]


state 41

    (17) EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    $end            reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27

  ! PLUS            [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 17 (EXPRESSION -> EXPRESSION MULTIPLY_ASSIGN EXPRESSION .) ]


state 42

    (18) EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .
    (6) EXPRESSION -> EXPRESSION . PLUS EXPRESSION
    (7) EXPRESSION -> EXPRESSION . MINUS EXPRESSION
    (8) EXPRESSION -> EXPRESSION . MPLUS EXPRESSION
    (9) EXPRESSION -> EXPRESSION . MMINUS EXPRESSION
    (10) EXPRESSION -> EXPRESSION . TIMES EXPRESSION
    (11) EXPRESSION -> EXPRESSION . DIVIDE EXPRESSION
    (12) EXPRESSION -> EXPRESSION . MTIMES EXPRESSION
    (13) EXPRESSION -> EXPRESSION . MDIVIDE EXPRESSION
    (14) EXPRESSION -> EXPRESSION . ASSIGN EXPRESSION
    (15) EXPRESSION -> EXPRESSION . ADD_ASSIGN EXPRESSION
    (16) EXPRESSION -> EXPRESSION . SUBSTRACT_ASSIGN EXPRESSION
    (17) EXPRESSION -> EXPRESSION . MULTIPLY_ASSIGN EXPRESSION
    (18) EXPRESSION -> EXPRESSION . DIVIDE_ASSIGN EXPRESSION
    (26) EXPRESSION -> EXPRESSION . TRANSPOSITION

    $end            reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .)
    RBRACKET        reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .)
    PLUS            shift and go to state 14
    MINUS           shift and go to state 15
    MPLUS           shift and go to state 16
    MMINUS          shift and go to state 17
    TIMES           shift and go to state 18
    DIVIDE          shift and go to state 19
    MTIMES          shift and go to state 20
    MDIVIDE         shift and go to state 21
    ASSIGN          shift and go to state 22
    ADD_ASSIGN      shift and go to state 23
    SUBSTRACT_ASSIGN shift and go to state 24
    MULTIPLY_ASSIGN shift and go to state 25
    DIVIDE_ASSIGN   shift and go to state 26
    TRANSPOSITION   shift and go to state 27

  ! PLUS            [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MINUS           [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MPLUS           [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MMINUS          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! TIMES           [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! DIVIDE          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MTIMES          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MDIVIDE         [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! ASSIGN          [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! ADD_ASSIGN      [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! SUBSTRACT_ASSIGN [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! MULTIPLY_ASSIGN [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! DIVIDE_ASSIGN   [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]
  ! TRANSPOSITION   [ reduce using rule 18 (EXPRESSION -> EXPRESSION DIVIDE_ASSIGN EXPRESSION .) ]


state 43

    (2) EXPRESSION -> LBRACKET EXPRESSION RBRACKET .

    PLUS            reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MINUS           reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MPLUS           reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MMINUS          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    TIMES           reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    DIVIDE          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MTIMES          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MDIVIDE         reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    ASSIGN          reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    ADD_ASSIGN      reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    SUBSTRACT_ASSIGN reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    MULTIPLY_ASSIGN reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    DIVIDE_ASSIGN   reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    TRANSPOSITION   reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    $end            reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)
    RBRACKET        reduce using rule 2 (EXPRESSION -> LBRACKET EXPRESSION RBRACKET .)

